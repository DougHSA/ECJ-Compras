@using System.Globalization;
@{
    ViewData["Title"] = "Pontuacao";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model ECJ_Compras.Dto.TransacaoDto
<head>
    <style>
        .titulo {
            display: flex;
            height: 120px;
            align-items: center;
            justify-content: center;
        }

        .principal {
            display: block;
            width: 85%;
            position: relative;
            top: 50%;
            left: 50%;
            transform: translate(-50%,0)
        }

        .card {
            background-color: goldenrod;
            box-shadow: 0 .5rem 1rem rgba(0,0,0,.5) !important;
        }

        .card-body{
            display: flex;
            justify-content: center;
        }

        .form-row {
            display: flex;
            flex-wrap: wrap;
            margin-bottom: 25px;
            justify-content: space-between;
        }

            .form-row > .col, .form-row > [class*=col-] {
                display: flex;
                padding-right: 5px;
                padding-left: 5px;
                align-items: center;
            }

        .form-label {
            font-size: 20px;
            margin-right: 8px;
            margin-bottom: 0;
        }

        .div-tabela {
            display: flex;
            width: 95%;
            align-items: center;
            font-size: 22px;
        }

        .table {
            margin: 0;
            border: solid;
        }

    </style>
</head>

<div class="text-center">
    <div class="titulo">
        <h1>Pontuação</h1>
    </div>
    <div>
        <div class="card">
            <div class="card-body">
                <div class="div-tabela">
                    <table class="table table-light table-hover">
                        <thead>
                            <tr>
                                <th>Equipe</th>
                                <th>Pontos</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                if (ViewBag.ListaEquipes != null)
                                {
                                    foreach (var equipe in ViewBag.ListaEquipes)
                                    {
                                        <tr>
                                            <td>@equipe.Nome</td>
                                            <td>@equipe.Pontos</td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                    <span id="tabela-count" hidden="hidden">@ViewBag.TabelaCount</span>
                    <nav aria-label="Navegação de página exemplo">
                        <ul id="pagination" class="pagination justify-content-end pagination-sm">
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/lancamento.js"></script>
<script>
    $(document).ready(function () {
        var campoValor = $('#valor');
        campoValor.val('R$ 0,00');

        campoValor.on('input', function () {
            var valor = campoValor.val().replace(/\D/g, '');

            var valorFormatado = (parseFloat(valor) / 100).toLocaleString('pt-BR', {
                style: 'currency',
                currency: 'BRL'
            });

            campoValor.val(valorFormatado);
        });


        let paginationElement = document.getElementById('pagination');
        let tabelaCount = $("#tabela-count")[0];
        let tabelaCountValor = parseInt(tabelaCount.innerText);
        let itemsPerPage = 5;
        let totalPages = Math.ceil(tabelaCountValor / itemsPerPage);
        let currentPage = 1;
        if (document.URL.includes("?page=")) {
            currentPage = parseInt(document.URL.replace("#", "").substring(document.URL.lastIndexOf("=") + 1))
        }

        function updatePagination() {
            paginationElement.innerHTML = "";

            let startPage = Math.max(1, currentPage - 1);
            let endPage = Math.min(totalPages, currentPage + 1);

            for (let i = startPage; i <= endPage; i++) {
                let li = document.createElement("li");
                let a = document.createElement("a");
                a.className = "page-link";
                a.textContent = i;

                if (document.URL.includes("Entrada?")) {
                    a.href = "?page=" + i;
                } else {
                    a.href = "Entrada?page=" + i;
                }

                if (i === currentPage) {
                    li.className = "active";
                }

                li.appendChild(a);
                paginationElement.appendChild(li);
            }

            if (currentPage > 1) {
                let prevLi = document.createElement("li");
                let prevLink = document.createElement("a");
                prevLink.className = "page-link";
                prevLink.textContent = "Anterior";
                prevLink.href = "#"; // Define a ação para voltar a página anterior
                prevLi.appendChild(prevLink);
                paginationElement.insertBefore(prevLi, paginationElement.firstChild);
            }

            if (currentPage < totalPages) {
                let nextLi = document.createElement("li");
                let nextLink = document.createElement("a");
                nextLink.className = "page-link";
                nextLink.textContent = "Próximo";
                nextLink.href = "#"; // Define a ação para avançar para a próxima página
                nextLi.appendChild(nextLink);
                paginationElement.appendChild(nextLi);
            }
        }

        updatePagination();

        paginationElement.addEventListener("click", function (event) {
            if (event.target.textContent === "Anterior") {
                currentPage = Math.max(1, currentPage - 1);
            } else if (event.target.textContent === "Próximo") {
                currentPage = Math.min(totalPages, currentPage + 1);
            } else {
                currentPage = parseInt(event.target.textContent);
            }

            updatePagination();
            // Aqui você pode adicionar lógica para carregar os dados da página selecionada
        });
    });
</script>
